import{_ as s,c as a,o as e,ag as n}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"üîê Authentication","description":"","frontmatter":{},"headers":[],"relativePath":"hosting/authentication.md","filePath":"en/hosting/authentication.md","lastUpdated":1750830601000}'),t={name:"hosting/authentication.md"};function l(o,i,r,p,h,d){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="üîê-authentication" tabindex="-1">üîê Authentication <a class="header-anchor" href="#üîê-authentication" aria-label="Permalink to &quot;üîê Authentication&quot;">‚Äã</a></h1><p>Notivae supports flexible, self-contained authentication options so you can stay in control of your user data and login flows. This includes support for traditional email/password accounts and external OAuth/OIDC providers.</p><h2 id="email-password-login" tabindex="-1">Email/Password Login <a class="header-anchor" href="#email-password-login" aria-label="Permalink to &quot;Email/Password Login&quot;">‚Äã</a></h2><p>Email/password login is supported by default. When a user signs up:</p><ul><li>An account is created using the provided email and password</li><li>A personal workspace is initialized</li><li>The user is immediately authenticated</li></ul><p>Email verification and password reset features are on the roadmap.</p><h3 id="environment-requirements" tabindex="-1">Environment Requirements <a class="header-anchor" href="#environment-requirements" aria-label="Permalink to &quot;Environment Requirements&quot;">‚Äã</a></h3><p>You‚Äôll need to configure the following environment variables:</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">AUTH_ENABLE_EMAIL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">AUTH_EMAIL_FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notivae@example.com</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">SMTP_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">smtp.example.com</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">SMTP_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">587</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">SMTP_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">your-smtp-user</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">SMTP_PASS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">your-smtp-pass</span></span></code></pre></div><blockquote><p>üìß Email delivery (e.g. for verification and password resets) will require working SMTP configuration. These features are not yet implemented, but the config is reserved.</p></blockquote><h2 id="oauth-oidc-authentication" tabindex="-1">OAuth / OIDC Authentication <a class="header-anchor" href="#oauth-oidc-authentication" aria-label="Permalink to &quot;OAuth / OIDC Authentication&quot;">‚Äã</a></h2><p>Notivae supports logging in via third-party identity providers using the OIDC protocol. This includes:</p><ul><li>GitHub</li><li>GitLab</li><li>Discord</li><li>Any provider that supports OpenID Connect</li></ul><p>This allows users to log in without managing passwords directly.</p><h3 id="setup-example-github" tabindex="-1">Setup Example (GitHub) <a class="header-anchor" href="#setup-example-github" aria-label="Permalink to &quot;Setup Example (GitHub)&quot;">‚Äã</a></h3><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">AUTH_ENABLE_OIDC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">OIDC_GITHUB_CLIENT_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">your-client-id</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">OIDC_GITHUB_CLIENT_SECRET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">your-client-secret</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">OIDC_GITHUB_ISSUER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://github.com/login/oauth</span></span></code></pre></div><p>More providers will be documented with exact values and setup instructions once the integration layer stabilizes.</p><h2 id="username-support" tabindex="-1">Username Support <a class="header-anchor" href="#username-support" aria-label="Permalink to &quot;Username Support&quot;">‚Äã</a></h2><p>Users can log in using either:</p><ul><li>Email address</li><li>Or a unique <strong>username</strong> (set at sign-up)</li></ul><p>Usernames are helpful for mentions, short profile URLs, and reducing friction in shared workspaces (future).</p><h2 id="session-management" tabindex="-1">Session Management <a class="header-anchor" href="#session-management" aria-label="Permalink to &quot;Session Management&quot;">‚Äã</a></h2><p>Sessions are handled using secure HTTP-only cookies. No client-side tokens are stored in localStorage or exposed to JavaScript. All tokens are signed and validated on the backend.</p><h2 id="planned-features" tabindex="-1">Planned Features <a class="header-anchor" href="#planned-features" aria-label="Permalink to &quot;Planned Features&quot;">‚Äã</a></h2><ul><li>Email verification and password reset flows</li><li>Admin UI for user management (per instance)</li><li>Optional 2FA support (TOTP-based)</li><li>Anonymous / invite-only registration modes</li><li>SSO login restrictions (e.g. only allow GitHub org members)</li></ul><hr><p>For more on how access is evaluated across documents and collections, see <a href="./../core-concepts/access-control">Access Control</a>.</p>`,27)]))}const k=s(t,[["render",l]]);export{c as __pageData,k as default};
