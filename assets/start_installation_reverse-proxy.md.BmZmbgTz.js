import{_ as e,c as a,o as i,ag as n}from"./chunks/framework.Bw-5EFTY.js";const k=JSON.parse('{"title":"🛡️ Reverse Proxy Setup for Notivae","description":"","frontmatter":{},"headers":[],"relativePath":"start/installation/reverse-proxy.md","filePath":"en/start/installation/reverse-proxy.md","lastUpdated":1754857830000}'),t={name:"start/installation/reverse-proxy.md"};function l(o,s,p,r,d,h){return i(),a("div",null,s[0]||(s[0]=[n(`<h1 id="🛡️-reverse-proxy-setup-for-notivae" tabindex="-1">🛡️ Reverse Proxy Setup for Notivae <a class="header-anchor" href="#🛡️-reverse-proxy-setup-for-notivae" aria-label="Permalink to &quot;🛡️ Reverse Proxy Setup for Notivae&quot;">​</a></h1><p>To make Notivae work correctly, you need to set up a <strong>reverse proxy</strong>. This is required even for local installations — not just for exposing it to the internet.</p><h2 id="❓-why-you-need-a-reverse-proxy" tabindex="-1">❓ Why You Need a Reverse Proxy <a class="header-anchor" href="#❓-why-you-need-a-reverse-proxy" aria-label="Permalink to &quot;❓ Why You Need a Reverse Proxy&quot;">​</a></h2><p>By default, Notivae’s frontend and backend are served on <strong>different ports</strong>:</p><ul><li>Frontend: <code>http://localhost:8766</code></li><li>Backend: <code>http://localhost:8765</code></li></ul><p>But the frontend is hardcoded to call the backend via <code>/api</code> on the <strong>same host and port</strong>. Without a reverse proxy, this fails, and the web UI won’t work.</p><p>A reverse proxy solves this by:</p><ul><li>Making both frontend and backend accessible from <strong>one unified domain</strong></li><li>Forwarding frontend requests to the frontend container</li><li>Forwarding <code>/api</code> requests to the backend container</li><li>Optionally handling HTTPS for secure public access</li></ul><h2 id="⚙️-what-you-ll-need" tabindex="-1">⚙️ What You’ll Need <a class="header-anchor" href="#⚙️-what-you-ll-need" aria-label="Permalink to &quot;⚙️ What You’ll Need&quot;">​</a></h2><ul><li>A reverse proxy installed (see options below)</li><li>A domain name (for internet-facing setups)</li><li>Basic familiarity with editing config files or using Docker</li></ul><h2 id="🔧-recommended-options" tabindex="-1">🔧 Recommended Options <a class="header-anchor" href="#🔧-recommended-options" aria-label="Permalink to &quot;🔧 Recommended Options&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Tool</th><th>Why Use It</th><th>Docs</th></tr></thead><tbody><tr><td><strong>Caddy</strong></td><td>Easiest to set up, automatic HTTPS</td><td><a href="https://caddyserver.com/" target="_blank" rel="noreferrer">caddyserver.com</a></td></tr><tr><td><strong>Traefik</strong></td><td>Designed for Docker, dynamic routing</td><td><a href="https://traefik.io/" target="_blank" rel="noreferrer">traefik.io</a></td></tr><tr><td><strong>Nginx</strong></td><td>Most flexible, widely supported</td><td><a href="https://nginx.org/" target="_blank" rel="noreferrer">nginx.org</a></td></tr></tbody></table><h2 id="🧾-example-configs" tabindex="-1">🧾 Example Configs <a class="header-anchor" href="#🧾-example-configs" aria-label="Permalink to &quot;🧾 Example Configs&quot;">​</a></h2><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>These configuration examples assume your reverse proxy is running inside Docker (alongside Notivae, via <code>docker-compose</code>).<br> If you&#39;re using a system-wide reverse proxy (e.g., Traefik or Nginx on the host system), replace:</p><ul><li><code>backend:80</code> with <code>http://localhost:8765</code></li><li><code>frontend:80</code> with <code>http://localhost:8766</code></li></ul></div><h3 id="🪄-caddy-example" tabindex="-1">🪄 Caddy Example <a class="header-anchor" href="#🪄-caddy-example" aria-label="Permalink to &quot;🪄 Caddy Example&quot;">​</a></h3><p>If you&#39;re using Docker Compose, create a <code>Caddyfile</code> like this:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wvl2X" id="tab-yT1jC-2" checked><label data-title="Caddyfile" for="tab-yT1jC-2">Caddyfile</label></div><div class="blocks"><div class="language-caddyfile vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">caddyfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>notivae.localhost</span></span>
<span class="line"><span></span></span>
<span class="line"><span>handle_path /api/* {</span></span>
<span class="line"><span>    reverse_proxy backend:80</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>handle {</span></span>
<span class="line"><span>    reverse_proxy frontend:80</span></span>
<span class="line"><span>}</span></span></code></pre></div></div></div><p>And add a Caddy service to your <code>docker-compose.yml</code>:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wKt7D" id="tab-Mbq_wcz" checked><label data-title="docker-compose.yml" for="tab-Mbq_wcz">docker-compose.yml</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  caddy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">caddy:alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;443:443&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./Caddyfile:/etc/caddy/Caddyfile</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">frontend</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">backend</span></span></code></pre></div></div></div><blockquote><p>💡 You’ll need to update <code>notivae.localhost</code> to your actual domain or host if not using <code>localhost</code>.</p></blockquote><h3 id="⚙️-nginx-example" tabindex="-1">⚙️ Nginx Example <a class="header-anchor" href="#⚙️-nginx-example" aria-label="Permalink to &quot;⚙️ Nginx Example&quot;">​</a></h3><p>If you&#39;re using Docker Compose, create a <code>nginx.conf</code> like this:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-sm1JV" id="tab-lRYAhZG" checked><label data-title="nginx.conf" for="tab-lRYAhZG">nginx.conf</label></div><div class="blocks"><div class="language-nginx vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notivae.localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /api/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://backend:80/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host $host;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Real-IP $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://frontend:80/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><p>And add an nginx service to your <code>docker-compose.yml</code>:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-pmICf" id="tab--imSi_7" checked><label data-title="docker-compose.yml" for="tab--imSi_7">docker-compose.yml</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  nginx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx:alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./nginx.conf:/etc/nginx/conf.d/default.conf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">frontend</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">backend</span></span></code></pre></div></div></div><blockquote><p>💡 You’ll need to update <code>notivae.localhost</code> to your actual domain or host if not using <code>localhost</code>.</p></blockquote><h2 id="🌍-exposing-to-the-internet" tabindex="-1">🌍 Exposing to the Internet <a class="header-anchor" href="#🌍-exposing-to-the-internet" aria-label="Permalink to &quot;🌍 Exposing to the Internet&quot;">​</a></h2><p>If you&#39;re self-hosting (e.g., on a home network or behind NAT), you&#39;ll need to expose your reverse proxy to the internet. There are two options:</p><h3 id="_1-port-forwarding-risky" tabindex="-1">1. Port Forwarding (Risky) <a class="header-anchor" href="#_1-port-forwarding-risky" aria-label="Permalink to &quot;1. Port Forwarding (Risky)&quot;">​</a></h3><p>Open ports <code>80</code> and <code>443</code> on your router to your server. <strong>Only recommended</strong> if you know how to secure your server (firewalls, fail2ban, etc.).</p><h3 id="_2-secure-tunnel-recommended" tabindex="-1">2. Secure Tunnel (Recommended) <a class="header-anchor" href="#_2-secure-tunnel-recommended" aria-label="Permalink to &quot;2. Secure Tunnel (Recommended)&quot;">​</a></h3><p>Use a tunnel service to make your reverse proxy public without opening any ports:</p><ul><li><strong><a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/" target="_blank" rel="noreferrer">Cloudflare Tunnel</a></strong></li><li><strong><a href="https://ngrok.com/" target="_blank" rel="noreferrer">Ngrok</a></strong></li></ul><p>These services let you tunnel traffic from a public domain to your local machine securely.</p><h2 id="🧠-alternative-tunnel-only-setup-no-reverse-proxy" tabindex="-1">🧠 Alternative: Tunnel-Only Setup (No Reverse Proxy) <a class="header-anchor" href="#🧠-alternative-tunnel-only-setup-no-reverse-proxy" aria-label="Permalink to &quot;🧠 Alternative: Tunnel-Only Setup (No Reverse Proxy)&quot;">​</a></h2><p>If you’re using a tunnel provider like <strong>Cloudflare Tunnel</strong>, you can skip setting up a separate reverse proxy altogether.</p><p>Configure your tunnel to forward:</p><ul><li><code>https://notivae.example.com/api/</code> → <code>http://localhost:8765</code></li><li><code>https://notivae.example.com/</code> → <code>http://localhost:8766</code></li></ul><p>This works because most tunnel providers allow advanced path-based routing. Notivae only requires that <code>/api/*</code> hits the backend on the same domain.</p><blockquote><p>✅ This is ideal for simple home or private setups with minimal config.</p></blockquote><h2 id="✅-final-checklist" tabindex="-1">✅ Final Checklist <a class="header-anchor" href="#✅-final-checklist" aria-label="Permalink to &quot;✅ Final Checklist&quot;">​</a></h2><ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_0" checked="true" disabled="true"><label for="cbx_0"> You’ve confirmed <code>backend</code> and <code>frontend</code> are both running</label></li><li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true"><label for="cbx_1"> You’ve either set up a reverse proxy <em>or</em> configured a tunnel-only setup</label></li><li class="task-list-item"><input type="checkbox" id="cbx_2" checked="true" disabled="true"><label for="cbx_2"> The <code>/api</code> path points to the backend, and <code>/</code> points to the frontend</label></li><li class="task-list-item"><input type="checkbox" id="cbx_3" checked="true" disabled="true"><label for="cbx_3"> If you&#39;re going public, you’ve configured HTTPS and/or tunneling</label></li></ul><p>Once all of this is in place, open your browser at:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://notivae.localhost</span></span></code></pre></div><p>(or your domain) — and the setup screen should appear 🎉</p><hr><blockquote><p>ℹ️ Having issues? Start by checking the container logs:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backend</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frontend</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> caddy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # or nginx</span></span></code></pre></div></blockquote><p>Still stuck? Look through our <a href="./troubleshooting">troubleshooting guide</a> or otherwise open a <a href="https://github.com/notivae/notivae/issues" target="_blank" rel="noreferrer">GitHub issue</a>.</p>`,48)]))}const u=e(t,[["render",l]]);export{k as __pageData,u as default};
