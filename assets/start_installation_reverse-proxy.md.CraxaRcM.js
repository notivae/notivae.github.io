import{_ as l,c as a,o as t,j as e,ag as n,a as i}from"./chunks/framework.Bw-5EFTY.js";const N=JSON.parse('{"title":"Reverse Proxy Setup for Notivae","description":"","frontmatter":{},"headers":[],"relativePath":"start/installation/reverse-proxy.md","filePath":"en/start/installation/reverse-proxy.md","lastUpdated":1754904200000}'),o={name:"start/installation/reverse-proxy.md"},r={id:"lucide-shield-reverse-proxy-setup-for-notivae",tabindex:"-1"},p={class:"lucide lucide-shield",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},d={id:"lucide-circle-question-mark-why-you-need-a-reverse-proxy",tabindex:"-1"},h={class:"lucide lucide-circle-question-mark",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},c={id:"lucide-cog-what-you-ll-need",tabindex:"-1"},k={class:"lucide lucide-cog",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},u={id:"lucide-wrench-recommended-options",tabindex:"-1"},g={class:"lucide lucide-wrench",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},y={id:"lucide-file-code-example-configs",tabindex:"-1"},m={class:"lucide lucide-file-code",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},v={id:"lucide-lock-caddy-example",tabindex:"-1"},E={class:"lucide lucide-lock",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},b={id:"lucide-cog-nginx-example",tabindex:"-1"},f={class:"lucide lucide-cog",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},_={id:"lucide-globe-exposing-to-the-internet",tabindex:"-1"},x={class:"lucide lucide-globe",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},w={id:"lucide-brain-alternative-tunnel-only-setup-no-reverse-proxy",tabindex:"-1"},T={class:"lucide lucide-brain",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},C={id:"lucide-check-square-final-checklist",tabindex:"-1"},F={class:"lucide lucide-square-check-big",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}};function A(P,s,D,S,B,M){return t(),a("div",null,[e("h1",r,[(t(),a("svg",p,s[0]||(s[0]=[e("path",{d:"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"},null,-1)]))),s[1]||(s[1]=i(" Reverse Proxy Setup for Notivae ")),s[2]||(s[2]=e("a",{class:"header-anchor",href:"#lucide-shield-reverse-proxy-setup-for-notivae","aria-label":'Permalink to "@lucide:shield Reverse Proxy Setup for Notivae"'},"​",-1))]),s[30]||(s[30]=e("p",null,[i("To make Notivae work correctly, you need to set up a "),e("strong",null,"reverse proxy"),i(". This is required even for local installations — not just for exposing it to the internet.")],-1)),e("h2",d,[(t(),a("svg",h,s[3]||(s[3]=[e("circle",{cx:"12",cy:"12",r:"10"},null,-1),e("path",{d:"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"},null,-1),e("path",{d:"M12 17h.01"},null,-1)]))),s[4]||(s[4]=i(" Why You Need a Reverse Proxy ")),s[5]||(s[5]=e("a",{class:"header-anchor",href:"#lucide-circle-question-mark-why-you-need-a-reverse-proxy","aria-label":'Permalink to "@lucide:circle-question-mark Why You Need a Reverse Proxy"'},"​",-1))]),s[31]||(s[31]=n("<p>By default, Notivae’s frontend and backend are served on <strong>different ports</strong>:</p><ul><li>Frontend: <code>http://localhost:8766</code></li><li>Backend: <code>http://localhost:8765</code></li></ul><p>But the frontend is hardcoded to call the backend via <code>/api</code> on the <strong>same host and port</strong>. Without a reverse proxy, this fails, and the web UI won’t work.</p><p>A reverse proxy solves this by:</p><ul><li>Making both frontend and backend accessible from <strong>one unified domain</strong></li><li>Forwarding frontend requests to the frontend container</li><li>Forwarding <code>/api</code> requests to the backend container</li><li>Optionally handling HTTPS for secure public access</li></ul>",5)),e("h2",c,[(t(),a("svg",k,s[6]||(s[6]=[n('<path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z"></path><path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"></path><path d="M12 2v2"></path><path d="M12 22v-2"></path><path d="m17 20.66-1-1.73"></path><path d="M11 10.27 7 3.34"></path><path d="m20.66 17-1.73-1"></path><path d="m3.34 7 1.73 1"></path><path d="M14 12h8"></path><path d="M2 12h2"></path><path d="m20.66 7-1.73 1"></path><path d="m3.34 17 1.73-1"></path><path d="m17 3.34-1 1.73"></path><path d="m11 13.73-4 6.93"></path>',14)]))),s[7]||(s[7]=i(" What You’ll Need ")),s[8]||(s[8]=e("a",{class:"header-anchor",href:"#lucide-cog-what-you-ll-need","aria-label":'Permalink to "@lucide:cog What You’ll Need"'},"​",-1))]),s[32]||(s[32]=e("ul",null,[e("li",null,"A reverse proxy installed (see options below)"),e("li",null,"A domain name (for internet-facing setups)"),e("li",null,"Basic familiarity with editing config files or using Docker")],-1)),e("h2",u,[(t(),a("svg",g,s[9]||(s[9]=[e("path",{d:"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"},null,-1)]))),s[10]||(s[10]=i(" Recommended Options ")),s[11]||(s[11]=e("a",{class:"header-anchor",href:"#lucide-wrench-recommended-options","aria-label":'Permalink to "@lucide:wrench Recommended Options"'},"​",-1))]),s[33]||(s[33]=n('<table tabindex="0"><thead><tr><th>Tool</th><th>Why Use It</th><th>Docs</th></tr></thead><tbody><tr><td><strong>Caddy</strong></td><td>Easiest to set up, automatic HTTPS</td><td><a href="https://caddyserver.com/" target="_blank" rel="noreferrer">caddyserver.com</a></td></tr><tr><td><strong>Traefik</strong></td><td>Designed for Docker, dynamic routing</td><td><a href="https://traefik.io/" target="_blank" rel="noreferrer">traefik.io</a></td></tr><tr><td><strong>Nginx</strong></td><td>Most flexible, widely supported</td><td><a href="https://nginx.org/" target="_blank" rel="noreferrer">nginx.org</a></td></tr></tbody></table>',1)),e("h2",y,[(t(),a("svg",m,s[12]||(s[12]=[e("path",{d:"M10 12.5 8 15l2 2.5"},null,-1),e("path",{d:"m14 12.5 2 2.5-2 2.5"},null,-1),e("path",{d:"M14 2v4a2 2 0 0 0 2 2h4"},null,-1),e("path",{d:"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"},null,-1)]))),s[13]||(s[13]=i(" Example Configs ")),s[14]||(s[14]=e("a",{class:"header-anchor",href:"#lucide-file-code-example-configs","aria-label":'Permalink to "@lucide:file-code Example Configs"'},"​",-1))]),s[34]||(s[34]=n('<div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>These configuration examples assume your reverse proxy is running inside Docker (alongside Notivae, via <code>docker-compose</code>).<br> If you&#39;re using a system-wide reverse proxy (e.g., Traefik or Nginx on the host system), replace:</p><ul><li><code>backend:80</code> with <code>http://localhost:8765</code></li><li><code>frontend:80</code> with <code>http://localhost:8766</code></li></ul></div>',1)),e("h3",v,[(t(),a("svg",E,s[15]||(s[15]=[e("rect",{width:"18",height:"11",x:"3",y:"11",rx:"2",ry:"2"},null,-1),e("path",{d:"M7 11V7a5 5 0 0 1 10 0v4"},null,-1)]))),s[16]||(s[16]=i(" Caddy Example ")),s[17]||(s[17]=e("a",{class:"header-anchor",href:"#lucide-lock-caddy-example","aria-label":'Permalink to "@lucide:lock Caddy Example"'},"​",-1))]),s[35]||(s[35]=n(`<p>If you&#39;re using Docker Compose, create a <code>Caddyfile</code> like this:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-bO_ar" id="tab-_jWmVpx" checked><label data-title="Caddyfile" for="tab-_jWmVpx">Caddyfile</label></div><div class="blocks"><div class="language-caddyfile vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">caddyfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>notivae.localhost</span></span>
<span class="line"><span></span></span>
<span class="line"><span>handle_path /api/* {</span></span>
<span class="line"><span>    reverse_proxy backend:80</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>handle {</span></span>
<span class="line"><span>    reverse_proxy frontend:80</span></span>
<span class="line"><span>}</span></span></code></pre></div></div></div><p>And add a Caddy service to your <code>docker-compose.yml</code>:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-cXVnD" id="tab-p44D2tM" checked><label data-title="docker-compose.yml" for="tab-p44D2tM">docker-compose.yml</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  caddy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">caddy:alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;443:443&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./Caddyfile:/etc/caddy/Caddyfile</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">frontend</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">backend</span></span></code></pre></div></div></div><blockquote><p>💡 You’ll need to update <code>notivae.localhost</code> to your actual domain or host if not using <code>localhost</code>.</p></blockquote>`,5)),e("h3",b,[(t(),a("svg",f,s[18]||(s[18]=[n('<path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z"></path><path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"></path><path d="M12 2v2"></path><path d="M12 22v-2"></path><path d="m17 20.66-1-1.73"></path><path d="M11 10.27 7 3.34"></path><path d="m20.66 17-1.73-1"></path><path d="m3.34 7 1.73 1"></path><path d="M14 12h8"></path><path d="M2 12h2"></path><path d="m20.66 7-1.73 1"></path><path d="m3.34 17 1.73-1"></path><path d="m17 3.34-1 1.73"></path><path d="m11 13.73-4 6.93"></path>',14)]))),s[19]||(s[19]=i(" Nginx Example ")),s[20]||(s[20]=e("a",{class:"header-anchor",href:"#lucide-cog-nginx-example","aria-label":'Permalink to "@lucide:cog Nginx Example"'},"​",-1))]),s[36]||(s[36]=n(`<p>If you&#39;re using Docker Compose, create a <code>nginx.conf</code> like this:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Am7h4" id="tab-6LbctY0" checked><label data-title="nginx.conf" for="tab-6LbctY0">nginx.conf</label></div><div class="blocks"><div class="language-nginx vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notivae.localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /api/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://backend:80/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host $host;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Real-IP $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://frontend:80/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><p>And add an nginx service to your <code>docker-compose.yml</code>:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-domrt" id="tab-3LvutOq" checked><label data-title="docker-compose.yml" for="tab-3LvutOq">docker-compose.yml</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  nginx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx:alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./nginx.conf:/etc/nginx/conf.d/default.conf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">frontend</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">backend</span></span></code></pre></div></div></div><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p>You’ll need to update <code>notivae.localhost</code> to your actual domain or host if not using <code>localhost</code>.</p></div>`,5)),e("h2",_,[(t(),a("svg",x,s[21]||(s[21]=[e("circle",{cx:"12",cy:"12",r:"10"},null,-1),e("path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"},null,-1),e("path",{d:"M2 12h20"},null,-1)]))),s[22]||(s[22]=i(" Exposing to the Internet ")),s[23]||(s[23]=e("a",{class:"header-anchor",href:"#lucide-globe-exposing-to-the-internet","aria-label":'Permalink to "@lucide:globe Exposing to the Internet"'},"​",-1))]),s[37]||(s[37]=n('<p>If you&#39;re self-hosting (e.g., on a home network or behind NAT), you&#39;ll need to expose your reverse proxy to the internet. There are two options:</p><h3 id="_1-port-forwarding-risky" tabindex="-1">1. Port Forwarding (Risky) <a class="header-anchor" href="#_1-port-forwarding-risky" aria-label="Permalink to &quot;1. Port Forwarding (Risky)&quot;">​</a></h3><p>Open ports <code>80</code> and <code>443</code> on your router to your server. <strong>Only recommended</strong> if you know how to secure your server (firewalls, fail2ban, etc.).</p><h3 id="_2-secure-tunnel-recommended" tabindex="-1">2. Secure Tunnel (Recommended) <a class="header-anchor" href="#_2-secure-tunnel-recommended" aria-label="Permalink to &quot;2. Secure Tunnel (Recommended)&quot;">​</a></h3><p>Use a tunnel service to make your reverse proxy public without opening any ports:</p><ul><li><strong><a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/" target="_blank" rel="noreferrer">Cloudflare Tunnel</a></strong></li><li><strong><a href="https://ngrok.com/" target="_blank" rel="noreferrer">Ngrok</a></strong></li></ul><p>These services let you tunnel traffic from a public domain to your local machine securely.</p>',7)),e("h2",w,[(t(),a("svg",T,s[24]||(s[24]=[n('<path d="M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z"></path><path d="M12 5a3 3 0 1 1 5.997.125 4 4 0 0 1 2.526 5.77 4 4 0 0 1-.556 6.588A4 4 0 1 1 12 18Z"></path><path d="M15 13a4.5 4.5 0 0 1-3-4 4.5 4.5 0 0 1-3 4"></path><path d="M17.599 6.5a3 3 0 0 0 .399-1.375"></path><path d="M6.003 5.125A3 3 0 0 0 6.401 6.5"></path><path d="M3.477 10.896a4 4 0 0 1 .585-.396"></path><path d="M19.938 10.5a4 4 0 0 1 .585.396"></path><path d="M6 18a4 4 0 0 1-1.967-.516"></path><path d="M19.967 17.484A4 4 0 0 1 18 18"></path>',9)]))),s[25]||(s[25]=i(" Alternative: Tunnel-Only Setup (No Reverse Proxy) ")),s[26]||(s[26]=e("a",{class:"header-anchor",href:"#lucide-brain-alternative-tunnel-only-setup-no-reverse-proxy","aria-label":'Permalink to "@lucide:brain Alternative: Tunnel-Only Setup (No Reverse Proxy)"'},"​",-1))]),s[38]||(s[38]=n('<p>If you’re using a tunnel provider like <strong>Cloudflare Tunnel</strong>, you can skip setting up a separate reverse proxy altogether.</p><p>Configure your tunnel to forward:</p><ul><li><code>https://notivae.example.com/api/</code> → <code>http://localhost:8765</code></li><li><code>https://notivae.example.com/</code> → <code>http://localhost:8766</code></li></ul><p>This works because most tunnel providers allow advanced path-based routing. Notivae only requires that <code>/api/*</code> hits the backend on the same domain.</p><div class="info custom-block github-alert"><p class="custom-block-title">This is ideal for simple home or private setups with minimal config.</p><p></p></div>',5)),e("h2",C,[(t(),a("svg",F,s[27]||(s[27]=[e("path",{d:"M21 10.656V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h12.344"},null,-1),e("path",{d:"m9 11 3 3L22 4"},null,-1)]))),s[28]||(s[28]=i(" Final Checklist ")),s[29]||(s[29]=e("a",{class:"header-anchor",href:"#lucide-check-square-final-checklist","aria-label":'Permalink to "@lucide:check-square Final Checklist"'},"​",-1))]),s[39]||(s[39]=n(`<ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_0" checked="true" disabled="true"><label for="cbx_0"> You’ve confirmed <code>backend</code> and <code>frontend</code> are both running</label></li><li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true"><label for="cbx_1"> You’ve either set up a reverse proxy <em>or</em> configured a tunnel-only setup</label></li><li class="task-list-item"><input type="checkbox" id="cbx_2" checked="true" disabled="true"><label for="cbx_2"> The <code>/api</code> path points to the backend, and <code>/</code> points to the frontend</label></li><li class="task-list-item"><input type="checkbox" id="cbx_3" checked="true" disabled="true"><label for="cbx_3"> If you&#39;re going public, you’ve configured HTTPS and/or tunneling</label></li></ul><p>Once all of this is in place, open your browser at:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://&lt;your-domain-or-ip&gt;</span></span>
<span class="line"><span>e.g. https://notivae.example.com</span></span></code></pre></div><p>and the login-page should appear.</p><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>Don&#39;t forget to run the setup wizard at</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://&lt;your-domain-or-ip&gt;/#/init</span></span></code></pre></div></div><hr><div class="info custom-block github-alert"><p class="custom-block-title">️ Having issues? Start by checking the container logs:</p><p></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # inspect all logs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frontend</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # inspect logs for a specific service</span></span></code></pre></div></div><p>Still stuck? Look through our <a href="./troubleshooting">troubleshooting guide</a> or otherwise open a <a href="https://github.com/notivae/notivae/issues" target="_blank" rel="noreferrer">GitHub issue</a>.</p>`,8))])}const V=l(o,[["render",A]]);export{N as __pageData,V as default};
