import{_ as i,c as e,o as t,ag as s}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"üîê Authentication","description":"","frontmatter":{},"headers":[],"relativePath":"hosting/authentication/index.md","filePath":"en/hosting/authentication/index.md","lastUpdated":1752770666000}'),n={name:"hosting/authentication/index.md"};function l(o,a,r,d,h,c){return t(),e("div",null,a[0]||(a[0]=[s(`<h1 id="üîê-authentication" tabindex="-1">üîê Authentication <a class="header-anchor" href="#üîê-authentication" aria-label="Permalink to &quot;üîê Authentication&quot;">‚Äã</a></h1><p>Notivae offers a flexible and self-contained authentication system, giving you full control over user data and login flows. It supports both traditional account-based login and external <a href="#oauth-oidc-authentication">OAuth/OIDC identity providers</a>, as well as passwordless login via <a href="./magic-link">Magic-Link</a>.</p><h2 id="supported-authentication-methods" tabindex="-1">Supported Authentication Methods <a class="header-anchor" href="#supported-authentication-methods" aria-label="Permalink to &quot;Supported Authentication Methods&quot;">‚Äã</a></h2><p>Users can authenticate using one or more of the following methods:</p><ul><li><a href="./password">Password-based Authentication</a> ‚Äî traditional username/email + password login</li><li><a href="#oauth-oidc-authentication">OAuth/OIDC providers</a> ‚Äî login via third-party services (e.g., GitHub, Discord)</li><li><a href="./magic-link">Magic-Link</a> ‚Äî passwordless login via email</li></ul><h2 id="password-based-login" tabindex="-1">Password-based login <a class="header-anchor" href="#password-based-login" aria-label="Permalink to &quot;Password-based login&quot;">‚Äã</a></h2><p>If using password-based login, users can log in using either:</p><ul><li>Their <strong>email address</strong></li><li>Or a unique <strong>username</strong> (set during sign-up)</li></ul><p>For email/password login details, refer to <a href="./password">Password-based Authentication</a>.</p><h2 id="oauth-oidc-authentication" tabindex="-1">OAuth / OIDC Authentication <a class="header-anchor" href="#oauth-oidc-authentication" aria-label="Permalink to &quot;OAuth / OIDC Authentication&quot;">‚Äã</a></h2><p>Notivae supports logging in via third-party identity providers using the OIDC protocol. This enables users to authenticate without managing passwords directly.</p><p>Supported providers include:</p><ul><li><a href="./discord">Discord</a> <small>(Planned)</small></li><li><a href="./github">GitHub</a> <small>(Planned)</small></li><li><a href="./gitlab">GitLab</a> <small>(Planned)</small></li><li><a href="./google">Google</a> <small>(Planned)</small></li><li><a href="./reddit">Reddit</a> <small>(Planned)</small></li><li><a href="./spotify">Spotify</a> <small>(Planned)</small></li><li><a href="./twitch">Twitch</a> <small>(Planned)</small></li><li>Any identity provider compliant with <a href="./oidc">OpenID Connect</a></li></ul><div class="tip custom-block github-alert"><p class="custom-block-title">Workaround</p><p>While most providers aren&#39;t officially supported yet, many can still be used via generic OIDC configuration.<br> For example, Discord and GitLab are OIDC compatible and can be manually integrated:</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">OIDC_CLIENT_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;your discord application&#39;s client ID&gt;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">OIDC_CLIENT_SECRET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;your discord application&#39;s client secret&gt;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">OIDC_DISCOVERY_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://discord.com/.well-known/openid-configuration</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">OIDC_SCOPES</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;identity email&quot;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">OIDC_DISPLAY_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Discord&quot;</span></span></code></pre></div></div><p>More providers will be documented with exact values and setup instructions once the integration layer stabilizes.</p><h2 id="magic-link-authentication" tabindex="-1">Magic-Link Authentication <a class="header-anchor" href="#magic-link-authentication" aria-label="Permalink to &quot;Magic-Link Authentication&quot;">‚Äã</a></h2><p>Magic-Link enables passwordless login through a secure link sent to the user&#39;s email address. This method is ideal for simplifying the login experience and reducing reliance on passwords.</p><ul><li>Can be used to <strong>register new accounts</strong></li><li>Can also be <strong>linked to existing accounts</strong> as an additional login method</li><li>See the <a href="./magic-link">Magic-Link Authentication Guide</a> for setup and behavior details</li></ul><h2 id="system-management" tabindex="-1">System Management <a class="header-anchor" href="#system-management" aria-label="Permalink to &quot;System Management&quot;">‚Äã</a></h2><p>A <strong>system admin account</strong> is created during the initial setup. This account has full access to all instance-level configuration and user management features.</p><h2 id="session-management" tabindex="-1">Session Management <a class="header-anchor" href="#session-management" aria-label="Permalink to &quot;Session Management&quot;">‚Äã</a></h2><p>Sessions are handled using secure HTTP-only cookies. No client-side tokens are stored in <code>localStorage</code> or exposed to JavaScript. All tokens are cryptographically signed and validated on the backend to ensure integrity and security.</p><h2 id="planned-features" tabindex="-1">Planned Features <a class="header-anchor" href="#planned-features" aria-label="Permalink to &quot;Planned Features&quot;">‚Äã</a></h2><ul><li>Email verification and password reset flows</li><li>Admin UI for user management (per instance)</li><li>Optional 2FA support (TOTP-based)</li><li>SSO login restrictions (e.g. only allow GitHub org members)</li></ul><hr><p>For more on how access is evaluated across documents and collections, see <a href="./../../core-concepts/access-control">Access Control</a>.</p>`,26)]))}const g=i(n,[["render",l]]);export{u as __pageData,g as default};
