import{_ as l,c as n,o as e,j as i,ag as t,a}from"./chunks/framework.Bw-5EFTY.js";const R=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"start/installation/index.md","filePath":"en/start/installation/index.md","lastUpdated":1754904200000}'),p={name:"start/installation/index.md"},h={id:"lucide-tool-case-installation",tabindex:"-1"},r={class:"lucide lucide-tool-case",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},o={id:"lucide-wrench-prerequisites",tabindex:"-1"},k={class:"lucide lucide-wrench",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},d={id:"lucide-folder-setup-files",tabindex:"-1"},c={class:"lucide lucide-folder",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},g={id:"lucide-square-play-start-the-stack",tabindex:"-1"},u={class:"lucide lucide-square-play",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},y={id:"lucide-square-check-verify",tabindex:"-1"},E={class:"lucide lucide-square-check",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},A={id:"lucide-globe-connect-frontend-and-backend",tabindex:"-1"},D={class:"lucide lucide-globe",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},m={id:"lucide-rocket-finalizing-your-instance",tabindex:"-1"},v={class:"lucide lucide-rocket",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},b={id:"lucide-repeat-2-updating",tabindex:"-1"},f={class:"lucide lucide-repeat-2",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}},F={id:"lucide-octagon-stopping-the-stack",tabindex:"-1"},C={class:"lucide lucide-octagon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",width:"1em",height:"1em",style:{"vertical-align":"middle"}};function _(w,s,T,S,x,B){return e(),n("div",null,[s[27]||(s[27]=i("div",{class:"important custom-block github-alert"},[i("p",{class:"custom-block-title"},"IMPORTANT"),i("p",null,"Notivae is in early-stage development. No features are fully implemented yet.")],-1)),i("h1",h,[(e(),n("svg",r,s[0]||(s[0]=[i("path",{d:"M10 15h4"},null,-1),i("path",{d:"m14.817 10.995-.971-1.45 1.034-1.232a2 2 0 0 0-2.025-3.238l-1.82.364L9.91 3.885a2 2 0 0 0-3.625.748L6.141 6.55l-1.725.426a2 2 0 0 0-.19 3.756l.657.27"},null,-1),i("path",{d:"m18.822 10.995 2.26-5.38a1 1 0 0 0-.557-1.318L16.954 2.9a1 1 0 0 0-1.281.533l-.924 2.122"},null,-1),i("path",{d:"M4 12.006A1 1 0 0 1 4.994 11H19a1 1 0 0 1 1 1v7a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"},null,-1)]))),s[1]||(s[1]=a(" Installation ")),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#lucide-tool-case-installation","aria-label":'Permalink to "@lucide:tool-case Installation"'},"‚Äã",-1))]),s[28]||(s[28]=i("p",null,[a("Notivae can run on your own computer or server using "),i("strong",null,"Docker"),a(", a tool that bundles everything it needs. No need to install each part separately.")],-1)),s[29]||(s[29]=i("p",null,[a("We‚Äôll use a tool called "),i("code",null,"docker-compose"),a(" to launch all components ‚Äì the app, its backend, and the database ‚Äì all with one command.")],-1)),i("h2",o,[(e(),n("svg",k,s[3]||(s[3]=[i("path",{d:"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"},null,-1)]))),s[4]||(s[4]=a(" Prerequisites ")),s[5]||(s[5]=i("a",{class:"header-anchor",href:"#lucide-wrench-prerequisites","aria-label":'Permalink to "@lucide:wrench Prerequisites"'},"‚Äã",-1))]),s[30]||(s[30]=t('<p>Make sure these are ready on your system:</p><ul class="task-list"><li class="task-list-item"><p><input type="checkbox" id="cbx_0" checked="true" disabled="true"><label for="cbx_0"><strong>Docker</strong><br><a href="https://docs.docker.com/get-docker/" target="_blank" rel="noreferrer">Install Docker</a></label></p></li><li class="task-list-item"><p><input type="checkbox" id="cbx_1" checked="true" disabled="true"><label for="cbx_1"><strong>Docker Compose</strong><br><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">Install Docker Compose</a></label></p></li><li class="task-list-item"><p><input type="checkbox" id="cbx_2" checked="true" disabled="true"><label for="cbx_2"> A machine that meets the <a href="./../requirements">minimum requirements</a></label></p></li><li class="task-list-item"><p><input type="checkbox" id="cbx_3" checked="true" disabled="true"><label for="cbx_3"> Basic knowledge of how to use a terminal (e.g., navigating folders, running commands)</label></p></li></ul>',2)),i("h2",d,[(e(),n("svg",c,s[6]||(s[6]=[i("path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"},null,-1)]))),s[7]||(s[7]=a(" Setup Files ")),s[8]||(s[8]=i("a",{class:"header-anchor",href:"#lucide-folder-setup-files","aria-label":'Permalink to "@lucide:folder Setup Files"'},"‚Äã",-1))]),s[31]||(s[31]=t(`<p>To run Notivae, you&#39;ll need two files:</p><ol><li><strong><code>docker-compose.yml</code></strong> ‚Äì defines the services (frontend, backend, database), ports, and volumes.</li><li><strong><code>.env</code></strong> ‚Äì contains configuration settings like database passwords, ports, and secrets.</li></ol><p>Copy the following files to your local machine or server. We recommend placing them under <code>/srv/notivae-stack</code>.</p><ul><li>The <code>docker-compose.yml</code> file works as-is but can be customized to your environment or use case.</li><li>The <code>.env</code> file <strong>must</strong> be reviewed and adjusted. Each variable has a comment or description in the sample. For a deeper explanation, see <a href="./../../hosting/configuration/">Configuration</a>.</li></ul><p>Your folder structure should look like this:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>üìÅ /srv/notivae-stack</span></span>
<span class="line"><span> ‚î£ üìÑ docker-compose.yml</span></span>
<span class="line"><span> ‚îó üìÑ .env</span></span></code></pre></div><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>These configuration files are currently in draft status and are not fully functional. Use them as a reference or base for manual setup until stable versions are released.</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-qtlAS" id="tab-YNe6e9t" checked><label data-title="docker-compose.yml" for="tab-YNe6e9t">docker-compose.yml</label><input type="radio" name="group-qtlAS" id="tab-glL3xQD"><label data-title=".env" for="tab-glL3xQD">.env</label></div><div class="blocks"><div class="language-yml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/notivae/server</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;127.0.0.1:8765:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    env_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.env</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      DATABASE_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${DATABASE_URL:-postgresql+asyncpg://notivae:devpass@postgres/notivae}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      REDIS_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">redis://redis</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nvdata:/data</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      postgres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_healthy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service_healthy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  web</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/notivae/web</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;127.0.0.1:8766:80&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  postgres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">postgres:alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      POSTGRES_USER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${POSTGRES_USER:-notivae}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      POSTGRES_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${POSTGRES_PASSWORD:-devpass}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      POSTGRES_DB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${POSTGRES_DB:-notivae}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pgdata:/var/lib/postgresql/data</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    healthcheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CMD-SHELL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pg_isready -U </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${POSTGRES_USER:-notivae}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">5s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      retries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">redis:alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    healthcheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CMD&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;redis-cli&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ping&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">5s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      retries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  nvdata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pgdata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Backend Debugging &amp; Logging</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Enables debug mode across the app.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Should be False in production to avoid exposing sensitive details.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#DEBUG=False</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Minimum severity level of log messages to be output.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Options:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   DEBUG    - Most verbose, shows everything (useful for local dev).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   INFO     - General runtime information (default for production).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   WARNING  - Things that might be problems in the future.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   ERROR    - Runtime errors that should be investigated.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   CRITICAL - Application or system-wide failures.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use DEBUG for local development, INFO or WARNING for production.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#LOGGING_LEVEL=INFO</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Format used for application logs.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   console - Human-readable format, ideal for terminal output.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   json    - Structured logs, preferred for log ingestion (e.g., ELK, Loki).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#LOGGING_FORMAT=console</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If enabled, logs will also be written to the database in addition to stdout.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Useful for persistent audit logs or advanced querying.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#LOG_TO_DB=True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Backend Server Configuration</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The IP address the backend server will bind to.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Common values:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   0.0.0.0 - Bind to all network interfaces (use in Docker or remote envs).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   127.0.0.1 - Bind to localhost only (useful for local testing).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SERVER_HOST=0.0.0.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The port the backend server will listen on.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Must be an integer between 1 and 65534.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SERVER_PORT=8765</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Database Configuration</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The full database connection URL used by the backend service to connect</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># to PostgreSQL. This should follow the format:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   dialect+driver://username:password@host:port/database</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   e.g. postgresql+asyncpg://notivae:devpass@postgres/notivae</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If you are using Docker Compose, this should typically point to the</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># internal Docker service name (e.g., \`postgres\`) instead of \`localhost\`.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">DATABASE_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">postgresql+asyncpg://notivae:devpass@localhost:5432/notivae</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The number of persistent database connections maintained per application worker.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Increase this value for high-throughput systems with lots of concurrent queries.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#DATABASE_POOL_SIZE=5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The number of temporary connections that can exceed the pool size during peak usage.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># These &quot;overflow&quot; connections are not persistent and will be discarded after use.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#DATABASE_POOL_MAX_OVERFLOW=10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Maximum time (in seconds) to wait for a database connection before failing.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Prevents application hangs under connection saturation or DB outage.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#DATABASE_POOL_TIMEOUT=30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Time (in seconds) after which idle database connections will be recycled.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Helps prevent stale or broken connections in long-lived environments.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#DATABASE_POOL_RECYCLE=1800</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># PostgreSQL Container Configuration (Docker Compose)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The username that will be created in the Postgres container.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This must match the user part of DATABASE_URL.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">POSTGRES_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notivae</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The password assigned to POSTGRES_USER.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Used for authenticating from the backend or any external tool.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This must match the password part of DATABASE_URL.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">POSTGRES_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">devpass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The name of the default database that will be created in the container.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This must match the database name in DATABASE_URL.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">POSTGRES_DB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notivae</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># OpenID Connect Identity Provider Config</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The client ID issued by your OpenID Connect provider (e.g. Auth0, Keycloak, etc.).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This must match the client configured in the identity provider dashboard.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#OIDC_CLIENT_ID=your-client-id</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The client secret corresponding to the OIDC client.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Keep this value secret and never commit it to version control.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#OIDC_CLIENT_SECRET=your-client-secret</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># URI where users are redirected to authorize the application.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#OIDC_AUTH_URI=https://example.com/oauth2/authorize</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># URI used to exchange the authorization code for tokens.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#OIDC_TOKEN_URI=https://example.com/oauth2/token</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># URI used to fetch authenticated user information.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#OIDC_USERINFO_URI=https://example.com/oauth2/userinfo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># URI to redirect users after logout (optional for some providers).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#OIDC_LOGOUT_URI=https://example.com/oauth2/logout</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Name shown in the UI for this login option (e.g. &quot;Authentik&quot;, &quot;My Company SSO&quot;).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#OIDC_DISPLAY_NAME=OpenID</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Scopes to request during authentication.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Adjust depending on the level of access your app needs.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#OIDC_SCOPES=&quot;openid profile email&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># GZip Compression Configuration</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ----------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Minimum size in bytes a response must reach before gzip compression is applied.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This helps avoid wasting CPU cycles compressing small payloads that won&#39;t benefit.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#GZIP_COMPRESSION_MINIMUM_SIZE=1000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Compression level to use when gzip is enabled.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1 = Fastest, lowest compression ratio.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 9 = Slowest, highest compression ratio.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 6 is the recommended default for balanced performance.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#GZIP_COMPRESSION_LEVEL=6</span></span></code></pre></div></div></div>`,8)),i("h2",g,[(e(),n("svg",u,s[9]||(s[9]=[i("rect",{width:"18",height:"18",x:"3",y:"3",rx:"2"},null,-1),i("path",{d:"m9 8 6 4-6 4Z"},null,-1)]))),s[10]||(s[10]=a(" Start the Stack ")),s[11]||(s[11]=i("a",{class:"header-anchor",href:"#lucide-square-play-start-the-stack","aria-label":'Permalink to "@lucide:square-play Start the Stack"'},"‚Äã",-1))]),s[32]||(s[32]=t('<p>From within the <code>/srv/notivae-stack</code> directory, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>This command will:</p><ul><li>Start the <strong>database</strong> and <strong>cache</strong> (for storage)</li><li>Start the <strong>backend</strong> (the engine)</li><li>Start the <strong>frontend</strong> (the user interface)</li></ul><p>Docker will automatically download any required images on the first run. This may take a while, depending on your internet connection.</p>',5)),i("h2",y,[(e(),n("svg",E,s[12]||(s[12]=[i("rect",{width:"18",height:"18",x:"3",y:"3",rx:"2"},null,-1),i("path",{d:"m9 12 2 2 4-4"},null,-1)]))),s[13]||(s[13]=a(" Verify ")),s[14]||(s[14]=i("a",{class:"header-anchor",href:"#lucide-square-check-verify","aria-label":'Permalink to "@lucide:square-check Verify"'},"‚Äã",-1))]),s[33]||(s[33]=t('<p>After a few seconds, run this command in your terminal:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8765/healtz</span></span></code></pre></div><p>You should see a simple response like:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ok&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>If you see this message, it means the backend is running successfully and responding to requests.</p><p>However, you <strong>won‚Äôt be able to access the web interface yet.</strong> The frontend and backend are exposed on different ports and cannot communicate directly in this setup.</p><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p>üõ†Ô∏è To continue, you need to configure a <a href="./reverse-proxy">reverse proxy</a> or another solution that connects the frontend to the backend under a unified address.<br> This is required before opening the web UI in your browser.</p></div>',7)),i("h2",A,[(e(),n("svg",D,s[15]||(s[15]=[i("circle",{cx:"12",cy:"12",r:"10"},null,-1),i("path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"},null,-1),i("path",{d:"M2 12h20"},null,-1)]))),s[16]||(s[16]=a(" Connect Frontend and Backend ")),s[17]||(s[17]=i("a",{class:"header-anchor",href:"#lucide-globe-connect-frontend-and-backend","aria-label":'Permalink to "@lucide:globe Connect Frontend and Backend"'},"‚Äã",-1))]),s[34]||(s[34]=t(`<p>Notivae‚Äôs frontend expects to reach the backend at <code>/api</code> on the <strong>same domain and port</strong> ‚Äî for example:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://notivae.example.com     ‚Üí frontend</span></span>
<span class="line"><span>https://notivae.example.com/api ‚Üí backend</span></span></code></pre></div><p>However, in the current setup, the backend and frontend are exposed on <strong>different ports</strong>:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://localhost:8766 ‚Üí Frontend</span></span>
<span class="line"><span>http://localhost:8765 ‚Üí Backend</span></span></code></pre></div><p>This means they <strong>can‚Äôt communicate properly</strong> until you combine them under a unified domain or port.</p><p>The solution is a reverse proxy. A <strong>reverse proxy</strong> acts as a gateway that:</p><ul><li>Routes browser requests to the correct service (frontend or backend)</li><li>Handles HTTPS (SSL) if needed</li><li>Rewrites paths like <code>/api/*</code> to target the backend</li></ul><p>This setup is required even if you&#39;re running Notivae locally.</p><p>Popular reverse proxy options:</p><ul><li><a href="https://caddyserver.com/" target="_blank" rel="noreferrer">Caddy</a> ‚Äî simple, automatic HTTPS</li><li><a href="https://traefik.io/traefik" target="_blank" rel="noreferrer">Traefik</a> ‚Äî Docker-native, dynamic</li><li><a href="https://nginx.org/" target="_blank" rel="noreferrer">Nginx</a> ‚Äî widely supported, configurable</li></ul><div class="info custom-block github-alert"><p class="custom-block-title">Need help setting it up?</p><p>See the <a href="./reverse-proxy">Reverse Proxy Guide</a> for setup examples and config snippets.</p></div><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>Hosting Notivae behind a home network? You may need a <strong>tunnel</strong> like <a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/" target="_blank" rel="noreferrer">Cloudflare Tunnel</a> or <a href="https://ngrok.com/" target="_blank" rel="noreferrer">Ngrok</a> to make it accessible from the internet.<br> This is also covered in the <a href="./reverse-proxy">Reverse Proxy Guide</a>.</p></div>`,12)),i("h2",m,[(e(),n("svg",v,s[18]||(s[18]=[i("path",{d:"M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z"},null,-1),i("path",{d:"m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z"},null,-1),i("path",{d:"M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0"},null,-1),i("path",{d:"M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5"},null,-1)]))),s[19]||(s[19]=a(" Finalizing your instance ")),s[20]||(s[20]=i("a",{class:"header-anchor",href:"#lucide-rocket-finalizing-your-instance","aria-label":'Permalink to "@lucide:rocket Finalizing your instance"'},"‚Äã",-1))]),s[35]||(s[35]=t(`<p>Notivae&#39;s web-ui has a built-in wizard to help you configure the final parts or your hosted instance. To start the setup wizard open the following page in your browser.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://&lt;your-domain-or-ip&gt;/#/init</span></span>
<span class="line"><span>e.g. https://notivae.example.com/#/init</span></span></code></pre></div>`,2)),i("h2",b,[(e(),n("svg",f,s[21]||(s[21]=[i("path",{d:"m2 9 3-3 3 3"},null,-1),i("path",{d:"M13 18H7a2 2 0 0 1-2-2V6"},null,-1),i("path",{d:"m22 15-3 3-3-3"},null,-1),i("path",{d:"M11 6h6a2 2 0 0 1 2 2v10"},null,-1)]))),s[22]||(s[22]=a(" Updating ")),s[23]||(s[23]=i("a",{class:"header-anchor",href:"#lucide-repeat-2-updating","aria-label":'Permalink to "@lucide:repeat-2 Updating"'},"‚Äã",-1))]),s[36]||(s[36]=t(`<p>To update Notivae to the latest version:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>This will:</p><ul><li>Pull the latest image versions</li><li>Restart the containers using the updated versions</li></ul><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>This command works only if you are omitting or using floating tags like <code>:latest</code> or <code>:dev</code> in your <code>docker-compose.yml</code>. If you pin versions explicitly in <code>docker-compose.yml</code>, you need to update the tags manually before running pull.</p></div>`,5)),i("h2",F,[(e(),n("svg",C,s[24]||(s[24]=[i("path",{d:"M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"},null,-1)]))),s[25]||(s[25]=a(" Stopping the Stack ")),s[26]||(s[26]=i("a",{class:"header-anchor",href:"#lucide-octagon-stopping-the-stack","aria-label":'Permalink to "@lucide:octagon Stopping the Stack"'},"‚Äã",-1))]),s[37]||(s[37]=t('<p>To shut everything down:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span></span></code></pre></div><p>Your data (e.g., database files) will be preserved unless you remove the Docker volumes explicitly.</p>',3))])}const P=l(p,[["render",_]]);export{R as __pageData,P as default};
